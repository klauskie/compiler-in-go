package constant

const (
	S_SUM uint8 = iota + 20
	S_SUBTRACT
	S_ASTERISK
	S_FORWARD_SLASH
	S_LESS
	S_LESS_EQUAL
	S_MORE
	S_MORE_EQUAL
	S_EQUAL_EQUAL
	S_NOT_EQUAL
	S_EQUAL // 30
	S_SEMICOLON
	S_COMMA
	S_OPEN_PARENTHESIS
	S_CLOSE_PARENTHESIS
	S_OPEN_SQR_BRACKET
	S_CLOSE_SQR_BRACKET
	S_OPEN_CURLY_BRACKET
	S_CLOSE_CURLY_BRACKET
	S_OPEN_COMMENT_BLOCK
	S_CLOSE_COMMENT_BLOCK // 40
	K_IF_ID
	K_ELSE_ID
	K_INT_ID
	K_RETURN_ID
	K_VOID_ID
	K_WHILE_ID
	K_INPUT_ID
	K_OUTPUT_ID
	H_WORD
	H_NUMBER // 50
	D_SPACE
	D_NEWLINE
	D_TAB
	S_ERROR
	S_ENDLINE
)

const (
	K_IF = "if"
	K_ELSE = "else"
	K_INT = "int"
	K_RETURN = "return"
	K_VOID = "void"
	K_WHILE = "while"
	K_INPUT = "input"
	K_OUTPUT = "output"
)

const (
	R_PROGRAM uint8 = iota + 60
	R_DECLARATION_LIST
	R_DECLARATION
	R_DECLARATION_AUX
	R_VAR_DECLARATION_DECORATION
	R_FUN_DECLARATION_VOID
	R_FUN_DECLARATION_TYPED
	R_PARAMS
	R_PARAM_LIST
	R_PARAM_LIST_AUX
	R_PARAM
	R_PARAM_DECORATOR
	R_COMPOUND_STMT_VOID
	R_COMPOUND_STMT_VOID_INIT
	R_COMPOUND_STMT_TYPED_RETURN
	R_COMPOUND_STMT_TYPED
	R_LOCAL_DECLARATIONS
	R_STATEMENT_LIST_VOID
	R_STATEMENT_LIST_TYPED
	R_STATEMENT_VOID
	R_STATEMENT_TYPED
	R_STATEMENT_GENERICS
	R_ASSIGNMENT_CALL_STMT
	R_ASSIGNMENT_CALL_STMT_AUX
	R_SELECTION_STMT_VOID
	R_SELECTION_STMT_VOID_AUX
	R_SELECTION_STMT_TYPED
	R_SELECTION_STMT_TYPED_AUX
	R_ITERATION_STMT_VOID
	R_ITERATION_STMT_TYPED
	R_RETURN_STMT_TYPED
	R_RETURN_STMT_VOID
	R_INPUT_STMT
	R_OUTPUT_STMT
	R_VAR_DECORATION
	R_EXPRESSION
	R_EXPRESSION_AUX
	R_RELOP
	R_ARITHMETIC_EXPRESSION
	R_ARITHMETIC_EXPRESSION_AUX
	R_ADDOP
	R_TERM
	R_TERM_AUX
	R_MULOP
	R_FACTOR
	R_FACTOR_ID
	R_FACTOR_ID_DECORATION
	R_ARGS
	R_ARGS_LIST
	R_ARGS_LIST_AUX
)
